<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxPersonImage.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>